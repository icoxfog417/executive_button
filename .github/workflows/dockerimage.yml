name: Build Docker Image

on:
  push:
    branches:
      - master

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install ecs-cli
      run: |
        sudo curl -o /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
        sudo chmod +x /usr/local/bin/ecs-cli
        ecs-cli configure profile --profile-name default --access-key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret-key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ecs-cli configure --cluster executive-cluster --default-launch-type FARGATE --region ap-northeast-1 --config-name executive_button --private-dns-namespace executive.button.com --enable-service-discovery

    - name: Login to Docker Hub
      env:
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      run: echo "${DOCKER_HUB_TOKEN}" | docker login -u icoxfog417 --password-stdin

    - name: Build the Docker images
      run: |
        docker-compose build --force-rm
        docker tag executive_button_backend icoxfog417/executive_button_backend
        docker tag executive_button_frontend icoxfog417/executive_button_frontend
        docker push icoxfog417/executive_button_backend:latest
        docker push icoxfog417/executive_button_frontend:latest

    - name: Build proxy Docker images
      run: |
        docker build -f nginx/Dockerfile -t icoxfog417/executive_button_proxy:latest .
        docker push icoxfog417/executive_button_proxy:latest

    - name: Deploy to ESC
      run: ecs-cli compose --file docker-compose.prod.yml --project-name executive_button service up --create-log-groups --cluster-config executive_button --ecs-profile default

    - name: Monitor to ESC
      run: ecs-cli compose --file docker-compose.prod.yml --project-name executive_button service ps --create-log-groups --cluster-config executive_button --ecs-profile default
